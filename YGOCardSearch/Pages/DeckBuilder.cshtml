@page
@using YGOCardSearch.Data.Models;
@model YGOCardSearch.Pages.DeckBuilder

@{
    var TotalDeckCards = Model.Deck.ExtraDeck.Count() + Model.Deck.MainDeck.Count();
    var topAtkCard = Model.Deck.MainDeck.OrderByDescending(c => c.Atk ?? 0).FirstOrDefault();
                            

    int pageSize = 10;
    int totalPages = (int)Math.Ceiling((double)Model.SearchCards.Count / pageSize);
    int currentPage = Request.Query.ContainsKey("page") ? Convert.ToInt32(Request.Query["page"]) : 1;
    int startIndex = (currentPage - 1) * pageSize;
    int endIndex = Math.Min(startIndex + pageSize - 1, Model.SearchCards.Count - 1);
}

<!DOCTYPE html>
<html>
<head>
    <!-- Include your necessary CSS and meta tags here -->
    <!-- Include script references -->
    <script type="module" src="/js/deck.js"></script>
    <script type="module" src="/js/rendering.js"></script>
    <script type="module" src="/js/interaction.js"></script>
    <script type="module" src="/js/deckBuilder.js"></script>
    <script type="module" src="/js/doughnut.js"></script>
    
    <!-- Razor Page HTML -->
</head>
<body>
    <div class="DeckBuilder_Deck_Options">
        <button class="btn btn-primary" id="saveDeckButton">Save</button>
        <button class="btn btn-danger" id="clearDeckButton">Clear</button>
        <button class="btn btn-secondary" id="shuffleDeckButton">Shuffle</button>
        <button class="btn btn-outline-warning" id="addCardButton">Add card (testing)</button>
    </div>
    
    @*deck-section and cards-section*@
    <div class="split-section"> 
        <div class="deck-section">
            <div class="DeckBuilder_DeckInfo">
                <div class="chartContainer">
                    <div class="chartImage">
                        <div id="doughnutChart" class="chart"></div>
                    </div>
                </div>
                <div class="infoContainer">
                    <h1>Deck Name: @Model.Deck.DeckName</h1>
                    <span>
                        <a class="cool-button" asp-page="/HandTesting" asp-route-deck="@Model.Deck">
                            Hand Testing
                        </a>
                    </span>
                    <div class="highest-card">
                        <h2>Highest atk card:</h2>
                        <table class="table table-dark">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th>Attack</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (topAtkCard != null)
                                {
                                    <tr>
                                        <td>@topAtkCard.Name</td>
                                        <td>@topAtkCard.Type</td>
                                        <td>@topAtkCard.Atk</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3">No cards found.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>       
                    
                </div> 
            </div>
            <!-- Deck content will be added dynamically using JavaScript -->
            <div class="DecksContainer">
                <div class="DeckBuilder_DeckCards_Container">
                    <h2>Main Deck [@Model.Deck.MainDeck.Count]</h2>
                    <div class="DeckBuilder_Container_MainDeck" id="main-deck" ondrop="drop(event)" ondragover="dragOver(event)"></div>
                    <h2>Extra deck: [@Model.Deck.ExtraDeck.Count]</h2>
                    <div class="DeckBuilder_Container_ExtraDeck"></div>
                    <h2>Side deck: [@Model.Deck.SideDeck.Count] </h2>
                    <div class="DeckBuilder_Container_SideDeck"></div>
                </div>
            </div>
        </div>

        <div class="cards-section">
            <div class="DeckBuilder_CardSearch_Container">
                <form method="GET">
                    <div class="form-group">
                        <div class="input-group">
                            <input type="search"
                                   class="form-control"
                                   asp-for="searchQuery" />
                            <button class="btn btn-light">Buscar</button>
                        </div>
                    </div>
                </form>
            </div>

            @*deprecated*@
            <div class="DeckBuilder_CardsListDetails">
                
                @*<table class="table table-dark">
                    <tbody>
                        @if (Model.SearchCards != null)
                        {
                            for (int i = startIndex; i <= endIndex; i++)
                            {
                                var card = Model.SearchCards[i];
                                string c = card.KonamiCardId.ToString() + ".jpg";
                                <tr>
                                    <td>
                                        <span class="inner deckView searchCard">
                                            <a asp-page="CardViewer" asp-route-id="@card.KonamiCardId">
                                                <img src="images/small/@c" alt="">
                                            </a>
                                        </span>
                                    </td>
                                   
                                    <td>
                                        <h3>@card.Name</h3>
                                        <p>@card.Desc</p>
                                    </td>
                                    <td>
                                        <button class="btn btn-success add-to-deck">Add to Deck</button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>   *@
            </div>
            @*Where the searched cards will display*@
            <div class="DeckBuilder_CardSearch_JS">
        </div>
    </div>
    
    <!-- Include necessary JavaScript files here -->
@section Scripts {


        <script>
            // Expose the deck data as JavaScript variables
            var deckData = @Html.Raw(Json.Serialize(Model.Deck));
            var mainDeckData = @Html.Raw(Json.Serialize(Model.Deck.MainDeck));
            var extraDeckData = @Html.Raw(Json.Serialize(Model.Deck.ExtraDeck));
            var searchedCards = @Html.Raw(Json.Serialize(Model.SearchCards));
            var testCard = @Html.Raw(Json.Serialize(Model.testCard));
        </script>
            <!-- Include your JavaScript file -->
            <script src="./js/drag-and-drop.js"></script>


}
</body>

</html>
